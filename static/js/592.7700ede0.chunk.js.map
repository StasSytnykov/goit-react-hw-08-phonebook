{"version":3,"file":"static/js/592.7700ede0.chunk.js","mappings":"0LAUA,UALqB,SAAC,GAAoB,IAAlBA,EAAiB,EAAjBA,WAEtB,OADmBC,EAAAA,EAAAA,IAAYC,EAAAA,IACX,SAAC,KAAD,KAAa,SAAC,KAAD,CAAUC,GAAIH,M,4ECPjD,IAAME,EAAc,SAAAE,GAAK,OAAIA,EAAMC,KAAKC,YAElCC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,KAAKG,KAAKC","sources":["Routes/PrivateRoute.jsx","redux/auth/authSelectors.js"],"sourcesContent":["import { Navigate, Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { getLoggedIn } from 'redux/auth/authSelectors';\n\nconst PrivateRoute = ({ redirectTo }) => {\n  const isLoggedIn = useSelector(getLoggedIn);\n  return isLoggedIn ? <Outlet /> : <Navigate to={redirectTo} />;\n};\n\nexport default PrivateRoute;\n\nPrivateRoute.propTypes = {\n  redirectTo: PropTypes.string.isRequired,\n};\n","const getLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUserEmail = state => state.auth.user.email;\n\nexport { getLoggedIn, getUserEmail };\n"],"names":["redirectTo","useSelector","getLoggedIn","to","state","auth","isLoggedIn","getUserEmail","user","email"],"sourceRoot":""}