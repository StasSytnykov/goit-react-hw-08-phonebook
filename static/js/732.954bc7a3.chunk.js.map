{"version":3,"file":"static/js/732.954bc7a3.chunk.js","mappings":"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","sources":["redux/auth/authSelectors.js","components/ContactForm/ContactForm.jsx","hooks/filterHook.js","components/Filter/Filter.jsx","components/ContactsList/ContactListItem/ContactListItem.jsx","components/ContactsList/ContactsList.jsx","views/ContactsView.jsx"],"sourcesContent":["const getLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUserEmail = state => state.auth.user.email;\n\nexport { getLoggedIn, getUserEmail };\n","import { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Typography } from '@mui/material';\n\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactsSlice';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const onAddContact = contact => {\n    if (contacts && contacts.some(item => item.name === contact.name)) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n    addContact(contact);\n  };\n\n  const onChangeInput = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n\n    if (name && number) {\n      onAddContact({\n        name,\n        number,\n      });\n    } else {\n      alert('The number field and name are empty, fill them in!');\n    }\n\n    reset(event);\n  };\n\n  const reset = event => {\n    setName('');\n    setNumber('');\n    event.currentTarget.reset();\n  };\n\n  return (\n    <Box textAlign=\"center\">\n      <Typography variant=\"h1\">Phonebook</Typography>\n      <Box\n        component=\"form\"\n        display=\"flex\"\n        justifyContent=\"center\"\n        sx={{\n          '& > :not(style)': { m: 1 },\n        }}\n        autoComplete=\"off\"\n        onSubmit={onSubmitForm}\n      >\n        <TextField\n          sx={{ width: '45ch' }}\n          type=\"text\"\n          name=\"name\"\n          onChange={onChangeInput}\n          id=\"filled-basic\"\n          label=\"Name\"\n          variant=\"filled\"\n          required\n        />\n        <TextField\n          sx={{ width: '45ch' }}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          id=\"filled-basic\"\n          label=\"Number\"\n          variant=\"filled\"\n          onChange={onChangeInput}\n          required\n        />\n        <Button disabled={!name || !number} type=\"submit\">\n          Add Contact\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterAction } from 'redux/contacts/filterSlice';\nimport { onFilterChange } from 'redux/contacts/filterSlice';\n\nexport const useFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(onFilterChange);\n  const onChangeFilter = event => dispatch(filterAction.changeFilter(event));\n\n  return { filter, changeFilter: onChangeFilter };\n};\n","import { Box, TextField, Typography } from '@mui/material';\nimport { useFilter } from 'hooks/filterHook';\n\nexport const Filter = () => {\n  const { filter, changeFilter } = useFilter();\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{\n        '& > :not(style)': { m: 2 },\n      }}\n    >\n      <Typography variant=\"h2\">Contacts</Typography>\n      <TextField\n        sx={{ width: '45ch' }}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={event => changeFilter(event.target.value)}\n        id=\"filled-basic\"\n        label=\"Find contacts by name\"\n        variant=\"filled\"\n        required\n      />\n    </Box>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { ListItemText, ListItem } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport { useDeleteContactMutation } from 'redux/contacts/contactsSlice';\n// import style from './ContactsListItem.module.css';\n\nexport const ContactListItem = ({ name, number, id }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  return (\n    <ListItem>\n      <ListItemText primary={`${name}: ${number}`} />\n      <IconButton\n        disabled={isLoading}\n        onClick={() => deleteContact(id)}\n        edge=\"end\"\n        aria-label=\"delete\"\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { Grid, List, Box } from '@mui/material';\n// import Table from '@mui/material/Table';\n// import TableBody from '@mui/material/TableBody';\n// import TableCell from '@mui/material/TableCell';\n// import TableHead from '@mui/material/TableHead';\n// import TableRow from '@mui/material/TableRow';\n// import TableContainer from '@mui/material/TableContainer';\n// import Container from '@mui/material/Container';\n// import Paper from '@mui/material/Paper';\nimport { ContactListItem } from './ContactListItem';\nimport { useFilter } from 'hooks/filterHook';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\nimport { useMemo } from 'react';\n\nexport const ContactsList = () => {\n  const { filter } = useFilter();\n  const { data: contacts } = useGetContactsQuery();\n\n  const filteredContacts = useMemo(() => {\n    return (\n      contacts?.filter(contact =>\n        contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n      ) ?? []\n    );\n  }, [filter, contacts]);\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      textAlign=\"center\"\n      // maxWidth={1000}\n      sx={{ flexGrow: 1 }}\n    >\n      {/* <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Dessert (100g serving)</TableCell>\n              <TableCell align=\"right\">Calories</TableCell>\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n            </TableRow>\n          </TableHead>\n        </Table>\n      </TableContainer> */}\n      <Grid item xs={12} md={6}>\n        <List>\n          {filteredContacts &&\n            filteredContacts.map(({ name, number, id }) => (\n              <ContactListItem key={id} name={name} number={number} id={id} />\n            ))}\n        </List>\n      </Grid>\n    </Box>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactsList } from 'components/ContactsList';\nimport { getLoggedIn } from 'redux/auth/authSelectors';\n\nconst ContactsView = () => {\n  const isLoggedIn = useSelector(getLoggedIn);\n\n  return isLoggedIn ? (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactsList />\n    </>\n  ) : (\n    <Navigate to={'/login'} />\n  );\n};\n\nexport default ContactsView;\n"],"names":["getLoggedIn","state","auth","isLoggedIn","getUserEmail","user","email","ContactForm","useState","name","setName","number","setNumber","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","onChangeInput","event","target","value","reset","currentTarget","Box","textAlign","Typography","variant","component","display","justifyContent","sx","m","autoComplete","onSubmit","contact","preventDefault","some","item","alert","TextField","width","type","onChange","id","label","required","Button","disabled","useFilter","dispatch","useDispatch","filter","useSelector","onFilterChange","changeFilter","filterAction","Filter","flexDirection","alignItems","ContactListItem","useDeleteContactMutation","deleteContact","isLoading","ListItem","ListItemText","primary","IconButton","onClick","edge","Delete","ContactsList","filteredContacts","useMemo","toLocaleLowerCase","includes","flexGrow","Grid","xs","md","List","map","to"],"sourceRoot":""}