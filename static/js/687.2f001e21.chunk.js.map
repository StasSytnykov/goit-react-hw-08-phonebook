{"version":3,"file":"static/js/687.2f001e21.chunk.js","mappings":"0LAWA,UANoB,SAAC,GAAwC,IAAD,IAArCA,WAAAA,OAAqC,SAAjBC,EAAiB,EAAjBA,WAGzC,OAFmBC,EAAAA,EAAAA,IAAYC,EAAAA,IACMH,GACb,SAAC,KAAD,CAAUI,GAAIH,KAAiB,SAAC,KAAD,M,4ECRzD,IAAME,EAAc,SAAAE,GAAK,OAAIA,EAAMC,KAAKC,YAElCC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,KAAKG,KAAKC","sources":["Routes/PublicRoute.jsx","redux/auth/authSelectors.js"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { getLoggedIn } from 'redux/auth/authSelectors';\n\nconst PublicRoute = ({ restricted = false, redirectTo }) => {\n  const isLoggedIn = useSelector(getLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return shouldRedirect ? <Navigate to={redirectTo} /> : <Outlet />;\n};\n\nexport default PublicRoute;\n\nPublicRoute.propTypes = {\n  restricted: PropTypes.bool.isRequired,\n  redirectTo: PropTypes.string.isRequired,\n};\n","const getLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUserEmail = state => state.auth.user.email;\n\nexport { getLoggedIn, getUserEmail };\n"],"names":["restricted","redirectTo","useSelector","getLoggedIn","to","state","auth","isLoggedIn","getUserEmail","user","email"],"sourceRoot":""}